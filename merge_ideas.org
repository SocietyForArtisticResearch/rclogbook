#+TITLE: Merging Graphical and Text-Based Editor
#+AUTHOR: RC Team
#+LATEX_CLASS: koma-article
#+OPTIONS: toc:nil 
#+LATEX_HEADER: \usepackage{setspace}
#+LATEX_HEADER: \onehalfspacing

** Introduction

This document describes the merging of the graphical and the
text-based editors. Besides HTML import and Research Video expositions
there will only be one editor for creating expositions in the RC which
the functionality of the current graphical and text-based editors and
also integrates some of the functionality of the media repository.

The editors are no longer to be selected for the entire exposition but
per page. A text-based expositions is essentially a sequence (from now
on called "1D page") of tools that can be edited using markdown and a
style sheet. It is thus possible to transform a graphical exposition
page (from now on called "2D page") into a text-based
exposition. Hence, each page of an exposition can be editor with both
editors and authors can decide whether they want each page to be
viewable in both ways. In this way, the 1D sequence (text-based) can
also function as a responsive mode for devices with smaller
displays. From this follows that each tool must have a unique index to
establish the order of tools (1D).

- text format for expositions (json)

  
** Changes to the text-based editor :casper:

Ideally the document is no longer one long markdown file, but a linear sequence of RC-tools.
The graphical exposition is a 2d positioned set of tools.

exposition =
    MetaData [ object1, object2, object3 ..  , objectN ] Style
  
objects:
   Text (markdown)
   HTML
   Media tool -> 
      Picture / Video / Audio /  Pdf / Media-set / Embed


??? -> A text can use media inline, by means of !{}  

** Media repo integration :casper:

Media tab should allow users to search and filter for media repo tags, keywords.

*** Media Tab > Fix icons for media upload and repo adding
    The button to add repositories (like Madek), should not be a "+", but a "add repo" text.
    The "+" should be reserved for uploading media files.

*** Media Repo View > Mode where media repo replaces the weave editor, so user can create sets manage tags etc..
    Have the repo appear in the graphical editor.... (hmm loading time??)

*** Technical > How could state be synced between media lists and repo's ? For example, when user is opening multiple tabs.
*** From set to exposition

** Changes and Adjustments :casper:
- Scrollbars on text tools. User defines width, height is defined by length of content (basically a CSS of "height:unset")
  This behavior should be default, but can be turned of in "options" menu.
- Layers
  * all objects have a layer number
  * only one layer can be edited at a time
  * you can turn the visibility of a layer on or off
- Edit tab, selecting a tool directly loads editor in sidebar.
- Keyboard cursors nudging tools.
- Form / block editor / media list would still be visible. drag and drop.
- Table of contents:
  - When a new page is created, the RC asks wether it should be added to the table of contents.
  - Pages that are not linked should have a different color.
- upload dialogues 
  When a tool is added, prompt user to upload a file directly.
- Different types of import (material to be turned into objects)
    

** Questions
- What kind of type and API can represent and enable both kinds of pages?
- How can the markdown representation work for the tools in the graphical editor?
- How to send events to/from elm elements (1D editor and media
  repo) to/from graphical editor and the media list?

** Questions not directly related to the merging
- What would be the preconditions and feasibility for a possible
  real-time exposition editor.
- We would like to process tools positions and size (2D) in JS. Is it
  possible to create mapping function over expositions (filtering, adjustments,
  ordering etc.)?
