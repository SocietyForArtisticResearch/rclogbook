#+TITLE: Merging Graphical and Text-Based Editor
#+AUTHOR: RC Team
#+LATEX_CLASS: koma-article
#+OPTIONS: toc:nil 
#+LATEX_HEADER: \usepackage{setspace}
#+LATEX_HEADER: \onehalfspacing

** Introduction

This document describes the merging of the graphical and the
text-based editors. Besides HTML import and Research Video expositions
there will thus only be one editor for creating expositions in the RC,
which combines the functionality of the current graphical and
text-based editors and also integrates some of the functionality of
the media repository.

The editors are no longer to be selected for the entire exposition but
per page. A text-based expositions is essentially a sequence (from now
on called "1D page") of tools that can be edited using markdown and a
style sheet. It is thus possible to transform a graphical exposition
page (from now on called "2D page") into a text-based exposition and
vice versa . Hence, each page of an exposition can be edited with both
editors and authors can decide whether they want each page to be
viewable in one or both ways. In this way, the 1D sequence
(text-based) can also function as a responsive mode for devices with
smaller displays. From this follows that each tool must have a unique
index to establish the order of tools (1D).

- text format for expositions (json)


** Changes to the text-based editor :casper:
- 1d, form based (in elm)

** Media repo integration :casper:
*** Media Tab > Better fix icons for media upload and repo adding
*** Media Tab > Filters for Tags / Keywords / Type
*** Media Repo View > Mode where media repo replaces the weave editor, so user can create sets manage tags etc..
*** Technical > How could state be synced between media lists and repo's ? For example, when user is opening multiple tabs.
*** From set to exposition

** Changes and Adjustments :casper:
- Scrollbars on text tools. User controls width, height is left to content.
- Layers: editing part of an exposition where all other things are "locked". Currently tools can be locked
- Form / block editor / media list would still be visible. drag and drop.
- Table of contents / 
- Automatic adding of new pages (prompt user)
- upload dialogues 
- different types of import (material to be turned into objects)
    

** Questions
- What kind of type and API can represent and enable both kinds of pages?
- How can the markdown representation work for the tools in the graphical editor?
- How to send events to/from elm elements (1D editor and media
  repo) to/from graphical editor and the media list?

** Questions not directly related to the merging
- What would be the preconditions and feasibility for a possible
  real-time exposition editor.
- We would like to process tools positions and size (2D) in JS. Is it
  possible to create mapping function over expositions (filtering, adjustments,
  ordering etc.)?
